#!/usr/bin/env node

/*!
 * Spec My Node
 * Copyright(c) Garren Smith <garrens@drivensoftware.net>
 * (MIT Licensed)
 */

/**
 * Spec My Node version.
 */

var version = '0.0.6';


var spec = require('../lib/Jody.js'),
    runner = require('../lib/runner.js'),
    matchers = require('../lib/matchers.js'),
    reporter = require('../lib/reporter.js'),
    path = require('path'),
    fs = require('fs'),
    args = process.argv.slice(2),
    files = [];    

var inspect = require('sys').inspect;
//console.log(args[0]);
//
var help = ''
+ 'Usage: Jody [options] <file ...>'
+ '\n'
+ '\nOptions:'
+ '\n  -v, --version        Output version number'
+ '\n  -h, --help           Display help information'
+ '\n'
+ '\n If no file given, will look in ./spec for spec';


while (args.length) {
  var arg = args.shift();
  switch(arg) {
    case '-h':
    case '--help':
      console.log(help + '\n');
      process.exit(1);
      break;

    case '-v':
    case '--version':
      console.log(version);
      process.exit(1);
      break;

    default:
      if (/\.js$/.test(arg)) {
        files.push(arg);
      }
      break;
  }
}

if (files.length === 0) {
  try {
    fs.readdirSync('spec').map(function(file){
      if (/\.js$/.test(file)) {
        files.push('spec/' + file); 
      }

    });
  } catch (err) {
    console.log('\n  failed to load specs in ./spec\n');
    process.exit(1);
  }
  console.log('files ' + files);
}

files.forEach (function (file) {
  file = path.join(process.cwd(), file);
  require(file);
  console.log("executing " + file);
});

runner.runAllSpecs();
var setExit = false;

process.addListener('exit', function () {
  if (setExit === true) { return; }  

  runner.processCallbacks();
  reporter.displayResults(); 
  setExit = true;
  if (reporter.failedSpecs) {
    process.exit(1);    
  }
  process.exit(0); 

});

// vim:ft=javascript
