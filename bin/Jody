#!/usr/bin/env node

/*!
 * Jody
 * Copyright(c) Garren Smith <garrens@drivensoftware.net>
 * (MIT Licensed)
 */

/**
 * Jody version.
 */

process.env.NODE_ENV='test' // set test environment

var version = '0.2.0pre';


var spec = require('../lib/Jody.js'),
    runner = require('../lib/runner.js'),
    matchers = require('../lib/matchers.js'),
    reporter = require('../lib/reporter.js'),
    path = require('path'),
    fs = require('fs'),
    args = process.argv.slice(2),
    files = [];    

var inspect = require('sys').inspect;
//console.log(args[0]);
//
var help = ''
+ 'Usage: Jody [options] <file ...>'
+ '\n'
+ '\nOptions:'
+ '\n  -v, --version        Output version number'
+ '\n  -h, --help           Display help information'
+ '\n'
+ '\n If no file given, will look in ./spec for spec';


while (args.length) {
  var arg = args.shift();
  switch(arg) {
    case '-h':
    case '--help':
      console.log(help + '\n');
      process.exit(1);
      break;

    case '-v':
    case '--version':
      console.log(version);
      process.exit(1);
      break;
    case '-d':
    case '--dir':
      loadFiles(args.shift());
      break

    default:
      if (/\.js$/.test(arg)) {
        files.push(arg);
      }
      break;
  }
}

function loadFiles(dir) {
try {
    fs.readdirSync(dir).map(function(file){
      if (/\.js$/.test(file)) {
        files.push(dir + '/' + file); 
      }

    });
  } catch (err) {
    console.log('\n  failed to load specs in ./spec\n');
    process.exit(1);
  }
  console.log('files ' + files);
}


if (files.length === 0) {
  loadFiles('spec');
}

files.forEach (function (file) {
  file = path.join(process.cwd(), file);
  require(file);
  console.log("executing " + file);
});

var specRunner = new runner.Runner();

specRunner.on('done', function () {
  reporter.displayResults();
  if (reporter.failedSpecs) {
    process.exit(1);
  }
  process.exit(0);

});

specRunner.run(spec.specs);

// vim:ft=javascript
